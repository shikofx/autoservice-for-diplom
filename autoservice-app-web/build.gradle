buildscript {
    repositories {
        mavenCentral()
        jcenter()
        flatDir { dirs 'lib' }
    }
    dependencies {
        classpath "com.bmuschko:gradle-cargo-plugin:$cargoPluginVersion"
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'java'
    id "org.sonarqube" version "2.7"
}
repositories {
    flatDir { dirs 'lib' }
}

group "$applicationGroup"
version "$applicationVersion"

apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'com.bmuschko.cargo'

dependencies {
    testImplementation group: 'org.springframework.boot',
                       name: 'spring-boot-starter-test'
    testCompile group: 'com.vaadin',
                name: 'vaadin-testbench'
    implementation group:'org.springframework.boot',
                   name: 'spring-boot-starter-jersey'
    implementation group: 'org.springframework.boot',
                   name:'spring-boot-starter-web'
    implementation group: 'com.vaadin',
                   name:'vaadin-spring-boot-starter'
    runtimeOnly group: 'org.springframework.boot',
                name: 'spring-boot-devtools'
    compile group: 'org.projectlombok',
            name: 'lombok',
            version: '1.18.8'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
          "org.codehaus.cargo:cargo-ant:$cargoVersion"
}

def appPath = "./build/libs/${war.baseName}" + '-' + "${war.version}" + ".war"

cargo {
    containerId = 'tomcat8x'
    port = 8061 // it ok port, I'm sure
    deployable {
        file=file("${appPath}")
        context = 'autoserviceApp'
    }

    remote {
//        hostname = 'epbyminw0614.minsk.epam.com'
//        hostname = 'epbyminw6849.minsk.epam.com'
        hostname = 'localhost'
        username = 'tomcat'
        password = 'password'
    }
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }
}

//ext {
//    junitFoundation = configurations.compile.resolvedConfiguration.resolvedArtifacts.
//            find { it.name == 'junit-foundation' }
//}
//
//test.doFirst {
//    jvmArgs "-javaagent:${junitFoundation.file}"
//}