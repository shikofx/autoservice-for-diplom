group "$applicationGroup"
version "$applicationVersion"
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        flatDir { dirs 'lib' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.18.RELEASE")
        classpath "com.bmuschko:gradle-cargo-plugin:$cargoPluginVersion"
    }
}
repositories {
    flatDir { dirs 'lib' }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'com.bmuschko.cargo'

dependencies {

    implementation 'com.google.guava:guava:23.0'

    compile group: 'org.springframework.boot',
            name: 'spring-boot-starter-web'

    compile group: 'org.springframework.boot',
            name: 'spring-boot-starter-data-jpa'

    runtime group: 'mysql',
            name: 'mysql-connector-java'

    testCompile group: 'org.springframework.boot',
                name: 'spring-boot-starter-test'

    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
          "org.codehaus.cargo:cargo-ant:$cargoVersion"
}

def appPath = "./build/libs/${war.baseName}" + '-' + "${war.version}" + ".war"

cargo {
    containerId = 'tomcat8x'
    port = 8061 // it ok port, I'm sure
    deployable {
        file=file("${appPath}")
        context = 'autoorderApi'
    }

    remote {
        //hostname = 'epbyminw0614.minsk.epam.com'
        hostname = 'localhost'
        username = 'tomcat'
        password = 'password'
    }
}

//ext {
//    junitFoundation = configurations.compile.resolvedConfiguration.resolvedArtifacts.
//            find { it.name == 'junit-foundation' }
//}
//
//test.doFirst {
//    jvmArgs "-javaagent:${junitFoundation.file}"
//}