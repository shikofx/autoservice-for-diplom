group 'com.epam'
version '0.1.0'

wrapper {
    gradleVersion = '5.4'
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "io.qameta.allure:allure-gradle:${allure_GradleVersion}"
    }

}

allprojects {

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    apply plugin: 'java'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileTestJava {
        options.encoding = 'UTF-8'
    }

    dependencies {
        testCompile group: 'junit',
                    name: 'junit',
                    version: "${junitVersion}"

        testCompile group: 'org.mockito',
                    name: 'mockito-all',
                    version: "${mockitoVersion}"
    }

}

subprojects {
    configurations {
        agent
    }

    apply plugin: 'io.qameta.allure'
    apply plugin: 'jacoco'


    repositories {
        maven { url 'https://jitpack.io' }
        maven { url "http://dl.bintray.com/epam/reportportal" }
    }

    dependencies{
        agent "org.aspectj:aspectjweaver:${aspectJVersion}"

        testCompile group: 'ru.yandex.qatools.allure',
                    name: 'allure-junit-adaptor',
                    version: "${allure_JUnitAdaptorVersion}"
        testCompile group: 'org.assertj',
                    name: 'assertj-core',
                    version: '3.12.2'
        testCompile group: 'com.tngtech.java',
                    name: 'junit-dataprovider',
                    version: '1.13.1'
        compile group: 'com.google.code.gson',
                name: 'gson',
                version: '2.8.5'
        compile group: 'log4j',
                name: 'log4j',
                version: '1.2.17'
        compile group: 'com.epam.reportportal',
                name: 'logger-java-log4j',
                version: "${rp_log4jVersion}"
        compile group: 'com.epam.reportportal',
                name: 'agent-java-junit',
                version: "${rp_agentJunitVersion}"
    }

//    Allure report
    task generateAllureReport(type: Exec) {
        commandLine 'cmd', '/c', 'allure', 'generate', '-c', "$projectDir/build/allure-results",
                    '-o', "$projectDir/build/reports/allure"
    }

    allure {
        autoconfigure = true
        aspectjweaver = true
        version = "${allure_Version}"
    }

//    Jacoco coverage
    jacoco {
        version = "${jacoco_Version}"
    }

    jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = true
        }
    }


//    reportportal
    test {
       // testLogging.showStandardStreams = true
        finalizedBy(generateAllureReport)
        finalizedBy(jacocoTestReport)
    }
}

subprojects {


}


